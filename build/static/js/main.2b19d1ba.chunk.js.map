{"version":3,"sources":["components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/GitCard.jsx","components/home/Project.jsx","components/Navbar.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["MainBody","useState","Array","icons","length","fill","hoverstatus","setHoverstatus","toggleHover","data","newhoverStatus","event","icon","id","className","FirstName","MiddleName","LastName","devDesc","map","key","target","rel","href","url","aria-label","image","split","onMouseOver","onMouseOut","class","AboutMe","style","paddingTop","aboutHeading","emoji","aboutDescription","resumeLink","role","src","alt","Language","value","setData","handleRequest","useCallback","e","axios","get","then","response","catch","error","console","message","useEffect","array","total_count","index","push","language","Math","trunc","GitCard","updated_at","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","textTransform","Project","projectsArray","setProjectsArray","gitHubLink","gitHubUsername","gitHubQuerry","slice","projectsLength","background","color","projectHeading","project","Navbar","props","isTop","setIsTop","document","addEventListener","istop","window","scrollY","process","type","data-toggle","data-target","aria-controls","aria-expanded","Contact","mobileNumber","emailId","Home","App","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b19d1ba.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Typist from \"react-typist\";\r\nimport {\r\n  FirstName,\r\n  LastName,\r\n  MiddleName,\r\n  devDesc,\r\n  icons,\r\n} from \"../../editable-stuff/configurations.json\";\r\nconst MainBody = () => {\r\n  // const [backgroundType, setBackgroundType] = useState(Configs.backgroundType);\r\n  const [hoverstatus, setHoverstatus] = useState(\r\n    new Array(icons.length).fill(\"socialicons\")\r\n  );\r\n\r\n  const toggleHover = (data) => {\r\n    const newhoverStatus = [...hoverstatus];\r\n\r\n    if (data.event === \"enter\") {\r\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\r\n      return setHoverstatus(newhoverStatus);\r\n    } else if (data.event === \"leave\") {\r\n      newhoverStatus[data.icon.id] = \"socialicons\";\r\n      return setHoverstatus(newhoverStatus);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\r\n    >\r\n      <div id=\"stars\"></div>\r\n      <div className=\"container container-fluid text-center \">\r\n        <h6 className=\"display-4\">\r\n          {FirstName + \" \" +MiddleName+\" \"+ LastName}\r\n        </h6>\r\n\r\n        <Typist className=\"lead\"> {devDesc}</Typist>\r\n        <div className=\"p-5\">\r\n          {icons.map((icon) => (\r\n            <a\r\n              key={icon.id}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={icon.url}\r\n              className=\"social-icon-rotate\"\r\n              aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n            >\r\n              <i\r\n                className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\r\n                onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\r\n                onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\r\n              />\r\n            </a>\r\n          ))}\r\n        </div>\r\n        <a class=\"btn btn-slice\" href=\"#aboutme\" aria-label=\"Learn more about me\">\r\n        <div class=\"top\"><span>More About me</span></div>\r\n        <div class=\"bottom\"><span>More About me</span></div>\r\n      </a>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","import React from \"react\";\r\nimport {\r\n  aboutHeading,\r\n  aboutDescription,\r\n  resumeLink\r\n} from \"../../editable-stuff/configurations.json\";\r\n\r\nimport emoji from \"react-easy-emoji\";\r\n\r\nconst AboutMe = () => {\r\n\r\n  return (\r\n    <div id=\"aboutme\" className=\" m-0 \" style={{ paddingTop: \"30px\" }}>\r\n      \r\n      <div className=\"p-5\">\r\n        <h1 className=\"display-4 mb-5 text-center\">{aboutHeading}</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5 mt-5\">\r\n            <p className=\"lead text-center\"><span>Hi!</span><span className=\"wave-emoji\">{emoji(\"👋\")}</span>{aboutDescription}</p>\r\n            {resumeLink && (\r\n              <p className=\"lead text-center\">\r\n                <a\r\n                  href={resumeLink}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer noopener\"\r\n                  role=\"button\"\r\n                  aria-label=\"Resume/CV\"\r\n                >\r\n                  <div class=\"btn-custom btn-two\">\r\n                    <span>Resume</span>\r\n                  </div>\r\n                </a>\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-7\">\r\n              <img className=\"aboutMe-avatar-sizing\" src={'programmer.svg'} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GitCard = ({ value }) => {\r\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\r\n\r\n  const handleUpdatetime = useCallback(\r\n    (e) => {\r\n      const date = new Date(value.pushed_at);\r\n      const nowdate = new Date();\r\n      const diff = nowdate.getTime() - date.getTime();\r\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\r\n\r\n      if (hours < 24) {\r\n        return setUpdatedAt(`${hours.toString()} hours ago`);\r\n      } else {\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        const day = date.getDate();\r\n        const monthIndex = date.getMonth();\r\n        const year = date.getFullYear();\r\n\r\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\r\n      }\r\n    },\r\n    [value.pushed_at]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleUpdatetime();\r\n  }, [handleUpdatetime]);\r\n\r\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\r\n  \r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card shadow-lg mb-5 rounded cardBgColor color-black\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\" style={{textTransform:'uppercase'}}>{name}</h5>\r\n          <p className=\"card-text\">{description} </p>\r\n          <a\r\n            href={`${svn_url}/archive/master.zip`}\r\n            className=\"btn btn-outline-info mr-3\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Clone Project\r\n          </a>\r\n          <a\r\n            href={svn_url}\r\n            target=\" _blank\"\r\n            className=\"btn btn-outline-info\"\r\n          >\r\n            <i className=\"fab fa-github\" /> Repo\r\n          </a>\r\n          <hr />\r\n          <Language value={languages_url}></Language>\r\n          <p className=\"card-text\">\r\n            <span className=\"text-dark card-link mr-4\">\r\n              <i className=\"fab fa-github\" /> Stars{\" \"}\r\n              <span className=\"badge badge-dark\">{stargazers_count+5}</span>\r\n            </span>\r\n            <small className=\"text-muted\">Updated {updated_at}</small>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Language = ({ value }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleRequest = useCallback(\r\n    (e) => {\r\n      axios\r\n        .get(value)\r\n        .then((response) => {\r\n          return setData(response.data);\r\n        })\r\n        .catch((error) => {\r\n          // handle error\r\n          return console.error(error.message);\r\n        })\r\n    },\r\n    [value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  const array = [];\r\n  let total_count = 0;\r\n  for (let index in data) {\r\n    array.push(index);\r\n    total_count += data[index];\r\n  }\r\n\r\n  return (\r\n    <div className=\"pb-3\">\r\n      {array.map((language) => (\r\n        <p key={language} className=\"badge badge-light card-link\">\r\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10}%\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GitCard;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport GitCard from \"./GitCard\";\r\nimport {\r\n  projectHeading,\r\n  gitHubLink,\r\n  gitHubUsername,\r\n  gitHubQuerry,\r\n  projectsLength,\r\n} from \"../../editable-stuff/configurations.json\";\r\n\r\nimport '../../common.scss';\r\n\r\nconst Project = () => {\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n\r\n  const handleRequest = useCallback((e) => {\r\n    axios\r\n      .get(gitHubLink + gitHubUsername + gitHubQuerry)\r\n      .then((response) => {\r\n        return setProjectsArray(response.data.slice(0, projectsLength));\r\n      })\r\n      .catch((error) => {\r\n        return console.error(error.message);\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, [handleRequest]);\r\n\r\n  return (\r\n    <div id=\"projects\" className=\"jumbotron jumbotron-fluid bg-transparent m-0 projectBg\" style={{background: \"linear-gradient(169deg, black 69%, white 31%)\", color: \"white\"}}>\r\n\t\t\r\n\t\t\t{projectsArray.length && (\r\n\t\t\t\t<div className=\"m-2 p-3\">\r\n\t\t\t\t\t<h1 className=\"display-4 mb-5 text-center\">{projectHeading}</h1>\r\n\t\t\t\t\t<div className=\"row flex-row-reverse\">\r\n\t\t\t\t\t\t<div className=\"col-md-5\">\r\n\t\t\t\t\t\t\t{projectsArray.map((project) => (\r\n\t\t\t\t\t\t\t\t<GitCard  key={project.id} id={project.id} value={project}/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-7\">\r\n\t\t\t\t\t\t\t<img className=\"myWorks-avatar-sizing\" src={\"developerActivity.svg\"} alt=\"\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FirstName, resumeLink } from '../editable-stuff/configurations.json';\r\n\r\nconst Navbar = props => {\r\n  const [isTop, setIsTop] = useState(true);\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', () => {\r\n      const istop = window.scrollY < 200;\r\n      if (istop !== isTop) {\r\n        setIsTop(istop);\r\n      }\r\n    });\r\n  }, [isTop]);\r\n\r\n  return (\r\n    <nav\r\n      className={`navmain navbar navbar-expand-lg fixed-top navbar-light ${\r\n        isTop ? 'bg-transparent' : 'bg-gradient'\r\n      } `}\r\n    >\r\n      <a className='navbar-brand' href={process.env.PUBLIC_URL + '/#home'}>\r\n        {`<${FirstName} />`}\r\n      </a>\r\n      <a href='!#' className='logo'>\r\n        {' '}\r\n      </a>\r\n      <button\r\n        className='navbar-toggler'\r\n        type='button'\r\n        data-toggle='collapse'\r\n        data-target='#navbarTogglerDemo02'\r\n        aria-controls='navbarTogglerDemo02'\r\n        aria-expanded='false'\r\n        aria-label='Toggle navigation'\r\n      >\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n\r\n      <div className='collapse navbar-collapse' id='navbarTogglerDemo02'>\r\n        <ul className='navbar-nav mr-auto mt-2 mt-lg-0'>\r\n          <li className='nav-item'>\r\n            <a\r\n              className='nav-link lead'\r\n              href={process.env.PUBLIC_URL + '/#projects'}\r\n            >\r\n              Projects\r\n            </a>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <a\r\n              className='nav-link lead'\r\n              href={resumeLink}\r\n              target='_blank'\r\n              rel='noreferrer noopener'\r\n            >\r\n              Resume\r\n            </a>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <a\r\n              className='nav-link lead'\r\n              href={process.env.PUBLIC_URL + '/#aboutme'}\r\n            >\r\n              About\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport emoji from \"react-easy-emoji\";\r\nimport { icons, mobileNumber, emailId } from \"../editable-stuff/configurations.json\";\r\nimport '../common.scss';\r\n\r\nconst Contact = () => {\r\n    const [hoverstatus, setHoverstatus] = useState(\r\n        new Array(icons.length).fill(\"socialicons\")\r\n      );\r\n    \r\n      const toggleHover = (data) => {\r\n        const newhoverStatus = [...hoverstatus];\r\n    \r\n        if (data.event === \"enter\") {\r\n          newhoverStatus[data.icon.id] = \"socialiconshover\";\r\n          return setHoverstatus(newhoverStatus);\r\n        } else if (data.event === \"leave\") {\r\n          newhoverStatus[data.icon.id] = \"socialicons\";\r\n          return setHoverstatus(newhoverStatus);\r\n        }\r\n      };\r\n    \r\n    return (\r\n    <div className=\"contact-card\">\r\n        <div className=\"wrapper\">\r\n            <h1 className=\"display-4 mb-5 text-center text-center\">Interested in working together? <span>{emoji(\"☕\")}</span></h1>\r\n            <div className=\"contact-seperate-section row\">\r\n                <div className=\"col-md-6 text-center right-line d-flex flex-column justify-content-center align-items-center\">Mobile <a href={\"tel:+91-\" + mobileNumber}>(+91) {mobileNumber}</a></div>\r\n                <div className=\"col-md-6 text-center d-flex flex-column justify-content-center align-items-center\">Email <a href={\"mailto:\" + emailId}>{emailId}</a> </div>\r\n            </div>\r\n            <div className=\"icons\">\r\n                {icons.map((icon) => (\r\n                    <a\r\n                    key={icon.id}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={icon.url}\r\n                    className=\"social-icon-rotate\"\r\n                    aria-label={`My ${icon.image.split(\"-\")[1]}`}\r\n                    >\r\n                        <i\r\n                            className={`fab ${icon.image}  fa-3x ${hoverstatus[icon.id]}`}\r\n                            style={{color:'black'}}\r\n                            onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\r\n                            onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\r\n                        />\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport \"./App.css\";\r\nimport { showNavigationbar } from \"./editable-stuff/configurations.json\";\r\nimport MainBody from \"./components/home/MainBody\";\r\nimport AboutMe from \"./components/home/AboutMe\";\r\nimport Project from \"./components/home/Project\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Contact from \"./components/Contact\";\r\nconst Home = () => {\r\n    return ( \r\n        <Fragment>\r\n            <MainBody />\r\n            <AboutMe />\r\n            <Project />\r\n            <Contact />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst App = () => ( \r\n    <BrowserRouter basename = { process.env.PUBLIC_URL + \"/\" } > { showNavigationbar && < Navbar /> } \r\n        <Route path = \"/\" exact component = { Home }/>         \r\n    </BrowserRouter>\r\n);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}